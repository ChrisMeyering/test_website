{"version":3,"sources":["logo.svg","images/icons8-github-50.svg","images/icons8-linkedin-50.svg","images/icons8-50.svg","images/sf_landscape.jpg","images/portrait.jpg","images/site_profile.jpg","components/NavbarComp.jsx","components/AboutMeComp.js","components/ProjectComp.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavbarComp","Navbar","bg","variant","Brand","href","Nav","Link","style","flex","flexDirection","justifyContent","Image","marginLeft","src","github","fluid","roundedCircle","linkedin","icons8","Component","AboutMeComponent","Card","className","margin","Img","backdrop","alt","ImgOverlay","Row","display","alignItems","Col","xs","sm","first","last","portrait","Body","Title","Subtitle","Text","width","picture","App","id","Container","logo","target","rel","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4cdfd689.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","module.exports = __webpack_public_path__ + \"static/media/icons8-github-50.0d96aee1.svg\";","module.exports = __webpack_public_path__ + \"static/media/icons8-linkedin-50.6a0ea9cd.svg\";","module.exports = __webpack_public_path__ + \"static/media/icons8-50.69ddc26e.svg\";","module.exports = __webpack_public_path__ + \"static/media/sf_landscape.6550743e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/portrait.b553818e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/site_profile.b462e998.jpg\";","import React, { Component } from 'react'\nimport { Navbar, Nav, Form, FormControl, Button, Image, Container } from 'react-bootstrap/'\nimport github from '../images/icons8-github-50.svg'\nimport linkedin from '../images/icons8-linkedin-50.svg'\nimport icons8 from '../images/icons8-50.svg'\nexport default class NavbarComp extends Component {\n    render() {\n        return (\n            // <Navbar id=\"navbar\" bg=\"dark\"  sticky variant=\"dark\">\n            //     <Navbar.Brand href=\"#home\">Chris Meyering</Navbar.Brand>\n            //     <Nav className=\"mr-auto\">\n            //         <Nav.Link href=\"#about\">About</Nav.Link>\n            //         <Nav.Link href=\"#education\">Education</Nav.Link>\n            //         <Nav.Link href=\"#projects\">Projects</Nav.Link>\n            //     </Nav>\n            //     <Nav className=\"justify-content-end\">\n            //         <Navbar.Brand href=\"https://www.github.com/ChrisMeyering\">\n            //             <img\n            //                 alt=\"\"\n            //                 src={github}\n            //                 width=\"30\"\n            //                 height=\"30\"\n            //                 className=\"d-inline-block align-top\"\n            //             />\n            //         </Navbar.Brand>\n            //         <Navbar.Brand href=\"https://www.linkedin.com/in/chris-meyering/\">\n            //             <img\n            //                 alt=\"\"\n            //                 src={linkedin}\n            //                 width=\"30\"\n            //                 height=\"30\"\n            //                 className=\"d-inline-block align-top\"\n            //             />\n            //         </Navbar.Brand>\n            //         <Navbar.Brand href=\"https://www.icons8.com/icons\">\n            //             <img\n            //                 alt=\"\"\n            //                 src={icons8}\n            //                 width=\"30\"\n            //                 height=\"30\"\n            //                 className=\"d-inline-block align-top\"\n            //             />\n            //         </Navbar.Brand>\n            //     </Nav>\n            // </Navbar>\n            <>\n  <Navbar bg=\"dark\" variant=\"dark\">\n    <Navbar.Brand href=\"#about\">Chris Meyering</Navbar.Brand>\n    <Nav >\n      <Nav.Link href=\"#about\">About</Nav.Link>\n      <Nav.Link href=\"#education\">Education</Nav.Link>\n      <Nav.Link href=\"#projects\">Projects</Nav.Link>\n    </Nav>\n    {/* <Navbar.Collapse style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-end'}}> */}\n        <Nav style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-end'}}>\n            <Navbar.Brand href=\"https://www.github.com/ChrisMeyering\">\n                <Image style={{marginLeft: \"16px\"}} src={github} fluid roundedCircle />                \n            </Navbar.Brand>\n            <Navbar.Brand href=\"https://www.linkedin.com/in/chris-meyering/\">\n                <Image style={{marginLeft: \"16px\"}} src={linkedin} fluid roundedCircle />\n            </Navbar.Brand>\n            <Navbar.Brand href=\"https://www.icons8.com/icons\">\n                <Image style={{marginLeft: \"16px\"}} src={icons8} fluid roundedCircle />\n            </Navbar.Brand>\n        </Nav>\n    {/* </Navbar.Collapse> */}\n  </Navbar>\n</>\n        )\n    }\n}","import React, { Component } from 'react'\nimport Card from 'react-bootstrap/Card'\n\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Image from 'react-bootstrap/Image'\nimport backdrop from '../images/sf_landscape.jpg'\nimport portrait from '../images/portrait.jpg'\nimport { Container } from 'react-bootstrap'\nexport default class AboutMeComponent extends Component {\n\n    render() {\n        return (\n            <Card className=\"bg-dark\" style={{margin: \"32px\"}} > \n                <Card.Img src={backdrop} alt=\"San Francisco's Golden Gate Bridge\" />\n                <Card.ImgOverlay className=\"float-right\">\n                    <Row style={{\n                                display: 'flex',\n                                alignItems: 'center',\n                                justifyContent: 'center'\n                            }}>\n                        <Col xs={12} sm={2} first=\"xs\" last=\"sm\">\n                            <Image src={portrait} fluid roundedCircle />\n                        </Col>\n                        <Col xs={12} sm={10} last=\"xs\" first=\"sm\">\n                            <Card style={{}}>\n                                <Card.Body>\n                                    <Card.Title>About Me</Card.Title>\n                                    <Card.Subtitle className=\"mb-2 text-muted\">Computer Science &#9679; Android Developer</Card.Subtitle>\n                                    <Card.Text>\n                                        Some quick example text to build on the card title and make up the bulk of\n                                        the card's content.\n                                    </Card.Text>\n                                    <Card.Link href=\"https://www.github.com/ChrisMeyering\">Github</Card.Link>\n                                    <Card.Link href=\"https://www.linkedin.com/in/chris-meyering/\">LinkedIn</Card.Link>\n                                </Card.Body>\n                            </Card>\n                        </Col>\n                    </Row>\n                </Card.ImgOverlay>\n            </Card>\n\n            //<Card className=\"bg-dark\" style={{marginTop: \"56px\"}} >\n            //     <Card.Img src={backdrop} alt=\"San Francisco's Golden Gate Bridge\" />\n            //     <Card.ImgOverlay>\n            //         <Container className=\"float-right\">\n            //             <Row>\n            //                 <Col xs={4} md={4}>\n            //                 </Col>\n            //                 <Col xs={8} md={8}>\n            //                     <Card style={{ width: '36rem' }}>\n            //                         <Card.Body>\n            //                             <Card.Title>About Me</Card.Title>\n            //                             <Card.Subtitle className=\"mb-2 text-muted\">Computer Science &#9679; Android Developer</Card.Subtitle>\n            //                             <Card.Text>\n            //                                 Some quick example text to build on the card title and make up the bulk of\n            //                                 the card's content.\n            //                 </Card.Text>\n            //                             <Card.Link href=\"https://www.github.com/ChrisMeyering\">Github</Card.Link>\n            //                             <Card.Link href=\"https://www.linkedin.com/in/chris-meyering/\">LinkedIn</Card.Link>\n            //                         </Card.Body>\n            //                     </Card>\n            //                 </Col>\n            //             </Row>\n            //         </Container>\n            //     </Card.ImgOverlay>\n            // </Card>\n        )\n    }\n}","import React, { Component } from 'react'\nimport Card from 'react-bootstrap/Card'\n\nimport picture from  '../images/site_profile.jpg'\nexport default class AboutMeComponent extends Component {\n    render() {\n        return (\n            <Card style={{ width: '18rem' }}>\n                  <Card.Img variant=\"top\" src={picture} />\n                <Card.Body>\n                    <Card.Title>About Me</Card.Title>\n                    <Card.Subtitle className=\"mb-2 text-muted\">Computer Science &#9679; Android Developer</Card.Subtitle>\n                    <Card.Text>\n                        Some quick example text to build on the card title and make up the bulk of\n                        the card's content.\n                    </Card.Text>\n                    <Card.Link href=\"https://www.github.com/ChrisMeyering\">Github</Card.Link>\n                    <Card.Link href=\"https://www.linkedin.com/in/chris-meyering/\">LinkedIn</Card.Link>\n                </Card.Body>\n            </Card>\n        )\n    }\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/NavbarComp'\nimport AboutMe from './components/AboutMeComp'\nimport Project from './components/ProjectComp'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport ScrollableAnchor from 'react-scrollable-anchor'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div>\n        <Navbar/>\n      </div>\n      var node = ReactDOM.findDOMNode(this.refs[])\n      <ScrollableAnchor id={'about'}>\n        <div>\n          <AboutMe/>\n        </div>\n      </ScrollableAnchor>\n      \n      <ScrollableAnchor id={'projects'}>\n        <Container>\n          <Row>\n            <Col> <Project/> </Col>\n            <Col> <Project/> </Col>\n            <Col> <Project/> </Col>\n          </Row>\n        </Container>\n      </ScrollableAnchor>\n\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}